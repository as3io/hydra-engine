scalar Date

type Query {
  ping: String!
  content(input: ContentIdInput!): Content!
  contentSlug(input: ContentSlugInput!): Content!
}
type Mutation {
  createContent(input: CreateContentInput!): Content!
  updateContent(input: UpdateContentInput!): Content!
}

type Content {
  id: String!
  title: String
  teaser: String
  slug: String
  text: String
  createdAt: Date
  updatedAt: Date
}

input ContentIdInput {
  id: String!
}

input ContentSlugInput {
  slug: String!
}

input CreateContentInput {
  payload: ContentPayload!
}

input UpdateContentInput {
  id: String!
  payload: ContentPayload!
}

input ContentPayload {
  title: String
  teaser: String
  slug: String
  text: String
}
