
type Mutation {
  createOrganizationKey(input: KeyInput!): Key!
  createProjectKey(input: KeyInput!): Key!
  createUserKey(input: KeyInput!): Key!
  updateOrganizationKey(input: KeyInput!): Key!
  updateProjectKey(input: KeyInput!): Key!
  updateUserKey(input: KeyInput!): Key!
}

enum KeyPurpose {
  Public
  Private
}

enum KeyScope {
  User
  Organization
  Project
}

type Key {
  id: String!
  purpose: KeyPurpose!
  scope: KeyScope!
  value: String
  description: String
  enabled: Boolean!
  accessed: Int
  accessedAt: Date
  createdAt: Date
  updatedAt: Date

  # organization: Organization
  # project: Project
  # user: User
}

input KeyInput {
  modelId: String!
  payload: KeyInputPayload!
}

input KeyInputPayload {
  purpose: String
  description: String
  enabled: Boolean
}
